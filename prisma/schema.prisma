// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id            Int             @id @default(autoincrement())
  firstName     String
  lastName      String
  username      String
  password      String
  email         String
  phoneNumber   String
  reviews       PatientReview[]
  prescriptions Prescription[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model PatientReview {
  id             Int      @id @default(autoincrement())
  reviewedDoctor Doctor   @relation(fields: [doctorId], references: [id])
  doctorId       Int
  reviewWriter   Patient  @relation(fields: [patientId], references: [id])
  patientId      Int
  review         String
  rating         Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Location {
  id       Int     @id @default(autoincrement())
  doctor   Doctor?
  street   String
  city     String
  province String
  lat      Decimal
  lng      Decimal
}

model Doctor {
  id             Int             @id @default(autoincrement())
  firstName      String
  lastName       String
  username       String
  password       String
  email          String
  phoneNumber    String
  specialization String
  appointments   Appointment[]
  reviews        PatientReview[]
  prescriptions  Prescription[]
  location       Location        @relation(fields: [locationId], references: [id])
  locationId     Int             @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Moderator {
  id          Int      @id @default(autoincrement())
  username    String
  email       String
  password    String
  permissions String[]
}

model Prescription {
  id            Int         @id @default(autoincrement())
  doctor        Doctor      @relation(fields: [doctorId], references: [id])
  doctorId      Int
  patient       Patient     @relation(fields: [patientId], references: [id])
  patientId     Int
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId Int
  diagnoese     String
  drugs         String
}

model Appointment {
  id           Int            @id @default(autoincrement())
  doctor       Doctor         @relation(fields: [doctorId], references: [id])
  doctorId     Int
  type         String
  at           DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Prescription Prescription[]
}
